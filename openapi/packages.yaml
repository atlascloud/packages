---
openapi: "3.0.0"
info:
  version: 2.0.0-beta1
  title: Package Repo API
  description: API for AtlasCloud package repo
  termsOfService: https://atlascloud.xyz/tos
  contact:
    name: AtlasCloud package team
    email: packages@atlascloud.xyz
    url: https://packages.atlascloud.xyz
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://packages.atlascloud.xyz/api
  - url: http://localhost:8888
security:
  - bearerAuth: []
paths:
  /orgs:
    get:
      # TODO pagination
      description: list of organizations
      operationId: ListOrganizations
      security: []
      responses:
        "200":
          description: organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}:
    get:
      description: info about an organizations
      operationId: GetOrganization
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: org info
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Organization"
    post:
      description: Create new repo
      operationId: CreateRepo
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
      requestBody:
        description: Repo to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRepo"
      responses:
        "200":
          description: repos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Repo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/distros:
    get:
      description: Return a list of distributions for an org
      operationId: ListDistros
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: repos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Distribution"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}:
    get:
      description: Return info about a distribution for an org
      operationId: GetOrgDistro
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
        - name: distro
          in: path
          description: the name of the distribution
          required: true
          schema:
            type: string
      responses:
        "200":
          description: repos
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Distribution"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/versions:
    get:
      description: list of versions
      operationId: ListVersions
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
        - name: distro
          in: path
          description: the name of the distribution
          required: true
          schema:
            type: string
      responses:
        "200":
          description: versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepoVersion"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/{version}/repos:
    get:
      description: List package repositories for an organization and distribution
      operationId: ListRepos
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
        - name: distro
          in: path
          description: the name of the distribution
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: the version of the distribution
          required: true
          schema:
            type: string
      responses:
        "200":
          description: repos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Repo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/{version}/{repo}:
    get:
      description: Returns repo info from a repo
      operationId: FindRepoByName
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
        - name: distro
          in: path
          description: the name of the distribution
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: the version of the distribution
          required: true
          schema:
            type: string
        - name: repo
          in: path
          description: name of repo to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: repo response
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Repo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/{version}/{repo}/architectures:
    get:
      description: List package repository architectures for an organization and distribution
      operationId: ListArches
      parameters:
        - name: org
          in: path
          description: the name of the organization
          required: true
          schema:
            type: string
        - name: distro
          in: path
          description: the name of the distribution
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: the version of the distribution
          required: true
          schema:
            type: string
        - name: repo
          in: path
          description: name of repo to look for packages
          required: true
          schema:
            type: string
      responses:
        "200":
          description: architectures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Architecture"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/{version}/{repo}/{arch}/pkgs:
    parameters:
      - name: org
        in: path
        description: the name of the organization
        required: true
        schema:
          type: string
      - name: distro
        in: path
        description: the name of the distribution
        required: true
        schema:
          type: string
      - name: version
        in: path
        description: version of repo to look for packages
        required: true
        schema:
          type: string
      - name: repo
        in: path
        description: name of repo to look for packages
        required: true
        schema:
          type: string
      - name: arch
        in: path
        description: arch of repo to look for packages
        required: true
        schema:
          type: string
    get:
      description: Returns a list of packages based on distro repo and version
      operationId: ListPackagesByRepo
      responses:
        "200":
          description: packages response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Package"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Create a package in a repo
      operationId: CreatePackage
      requestBody:
        description: package to add
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                # this is the actual file upload
                package:
                  type: string
                  format: binary
      responses:
        "200":
          description: package response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Package"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{org}/{distro}/{version}/{repo}/{arch}/index:
    parameters:
      - name: org
        in: path
        description: the name of the organization
        required: true
        schema:
          type: string
      - name: distro
        in: path
        description: the name of the distribution
        required: true
        schema:
          type: string
      - name: version
        in: path
        description: version of repo to look for packages
        required: true
        schema:
          type: string
      - name: repo
        in: path
        description: name of repo to look for packages
        required: true
        schema:
          type: string
      - name: arch
        in: path
        description: arch of repo to look for packages
        required: true
        schema:
          type: string
    post:
      description: Create a package index in a repo
      operationId: CreatePackageIndex
      responses:
        "200":
          description: package index response
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/GenerateIndex"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # try to get the LCD of everything... probably poorly
  # /{org}/{distro}/{version}/{repo}/{arch}/
  # package_type = debian/alpine/npm/maven/etc
  # repo_type = community/testing/main/
  # repo version = stable/buster/3.14/latest/beta
  # /o/atlascloud/p/alpine/r/main/v/edge
  # /o/atlascloud/p/alpine/r/main/v/3.14
  # /o/atlascloud/p/debian/r/main/v/bullseye
  # /o/atlascloud/p/debian/r/contrib/v/bullseye
  # /o/atlascloud/p/debian/r/contrib/v/10.0
  # /o/atlascloud/p/npm/r/stable/v/latest
  # /o/atlascloud/p/npm/r/beta/v/latest

  # healthchecks/metrics/etc
  # /metrics comes from prometheus echo middleware
  # can't include it here because then echo expects me to write a handler for it instead of
  # realizing it's from a middleware
  /health/ping:
    get:
      security: []
      responses:
        "200":
          description: ping pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
  /health/ready:
    get:
      security: []
      responses:
        "200":
          description: ready or not
          content:
            text/plain:
              schema:
                type: string
                example: ready
    # this is just to satisfy uptimerobit
    head:
      security: []
      responses:
        "200":
          description: ready or not
          content:
            text/plain:
              schema:
                type: string
                example: ready

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Architecture:
      type: string
    Distribution:
      type: string
    RepoVersion:
      type: string
    RepoVersions:
      type: array
      items:
        $ref: "#/components/schemas/RepoVersion"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    # Metrics:
    #   type: object
    #   properties:
    NewPackage:
      type: object
      required:
        - file
    NewRepo:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the repo to add
        description:
          type: string
          description: Description of the repo to add - not functional - just for ease of use
    Organization:
      type: object
      properties:
        name:
          type: string
          description: name of the organization
        distributions:
          type: array
          items:
            $ref: "#/components/schemas/Distribution"
          description: the list of repos that belong to this org (this data may be dependent on auth)
    Package:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name of the package
        version:
          type: string
        release:
          type: string
    Repo:
      type: object
      required:
        - name
        - repo
        - version
      properties:
        name:
          type: string
          description: Name of the repo
        architectures:
          type: array
          description: list of architectures in this repo
          items:
            $ref: "#/components/schemas/Architecture"
        description:
          type: string
          description: Description of the repo - not functional - just for ease of use
    GenerateIndex:
      type: object
      required:
        - status
      properties:
        status:
          type: boolean
          description: package index success status
